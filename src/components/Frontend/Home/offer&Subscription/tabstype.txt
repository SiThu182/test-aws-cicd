import { Button, createTheme, ThemeProvider, Typography } from "@mui/material";
import { Box } from "@mui/system";
import React, { useEffect } from "react";
import { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";

import { fetchMockTestPlanFrontendAsync, fetchPracticeMockTestPlanFrontendAsync, fetchPracticeMockTestSectionalMockTestPlanFrontendAsync, fetchPracticePlanFrontendAsync, fetchSectionalMockTestPlanFrontendAsync } from "../../../../redux/thunk/Subscription";
import SubscriptionPlanCard from "./SubscriptionPlanCardjs";
import SubscriptionSwitchLayout from "./SubscriptionSwitchLayout";

import "react-multi-carousel/lib/styles.css";

//md breakpoint change for responsive layout in cards
const theme = createTheme({
  breakpoints: {
    values: {
      xs: 0,
      sm: 600,
      md: 1000,
      lg: 1200,
      xl: 1536,
    },
  },
});

function Subscription() {
  const {
    practiceFrontendStatus,
    practiceFrontend,
    practiceMtFrontendStatus,
    practiceMtFrontend,
    mtFrontendStatus,
    mtFrontend,
    sectionalMtFrontend,
    sectionalMtFrontendStatus,
    practiceMtSectionalMtFrontendStatus,
    practiceMtSectionalMtFrontend,
  } = useSelector((state) => state.subscription);
  const dispatch = useDispatch();
  localStorage.setItem("backToPath", "/");
  // const navigate = useNavigate();
  // const userId = localStorage.getItem("userId");
  const [showType, setShowType] = useState(1);
  useEffect(() => {
    dispatch(fetchPracticePlanFrontendAsync());
    dispatch(fetchMockTestPlanFrontendAsync());
    dispatch(fetchPracticeMockTestPlanFrontendAsync());
    dispatch(fetchSectionalMockTestPlanFrontendAsync());
    dispatch(fetchPracticeMockTestSectionalMockTestPlanFrontendAsync());
    // setAssign();
  }, [dispatch]);
  //custom css and responsive value
  const hStyle = {
    fontSize: {
      xs: "16px",
      sm: "17px",
      md: "1.7rem",
    },
    fontWeight: 600,
    pt: "1rem",
    pb: "1rem",
    textAlign: "center",
  };



  const PlanTypesBtn = (props) => {
    const { type } = props;
    return (
      <Button
        variant="contained"
        sx={{
          backgroundColor: "#041E42",
          mr: 1,
          "&:hover": {
            backgroundColor: "white",
            color: "black",
          },
        }}
        onClick={() => showPlanCard(type)}
      >
        {props.children}
      </Button>
    );
  };

  const showPlanCard = (type) => {
    setShowType(type);
  };

  return (
    <>
      <ThemeProvider theme={theme}>
        {/* subscripiont box start */}
        <Box
          pb={5}
          sx={{
            width: {
              md: "100%",
              xl: "70%",
            },
            mx: "auto",
            mt: "5rem",
          }}
        >
          {/* <subscription title */}
          <Typography variant="h3" sx={{ ...hStyle }}>
            SUBSCRIPTION PLAN
          </Typography>

          <SubscriptionSwitchLayout></SubscriptionSwitchLayout>
          <Typography variant="h6" textAlign={"center"}>
            Training Package
          </Typography>
          <Box
            sx={{
              display: "flex",
              justifyContent: "center",
              flexDirection: {
                xs: "column",
                md: "row",
              },
              alignItems: "center",
            }}
          >
            <Box sx={{ my: 2 }}>
              <PlanTypesBtn type={1}>Ai Practice</PlanTypesBtn>
              <PlanTypesBtn type={2}>Ai Mock Test</PlanTypesBtn>
              <PlanTypesBtn type={4}>Sectional Mock Test</PlanTypesBtn>
            </Box>
            <Box sx={{ my: 2 }}>
              <PlanTypesBtn type={5}>
                Practice + <br />
                Ai Mock Test
              </PlanTypesBtn>
              <PlanTypesBtn type={8}>
                Practice + Ai Mock Test + <br />
                Sectional Mock Test
              </PlanTypesBtn>
            </Box>
          </Box>
          {showType === 1 && (
            <SubscriptionPlanCard
              planFrontend={practiceFrontend}
              planFrontendStatus={practiceFrontendStatus}
              planType={1}
            ></SubscriptionPlanCard>
          )}
          {showType === 2 && (
            <SubscriptionPlanCard
              planFrontend={mtFrontend}
              planFrontendStatus={mtFrontendStatus}
              planType={2}
            ></SubscriptionPlanCard>
          )}
          {showType === 5 && (
            <SubscriptionPlanCard
              planFrontend={practiceMtFrontend}
              planFrontendStatus={practiceMtFrontendStatus}
              planType={5}
            ></SubscriptionPlanCard>
          )}
          {showType === 4 && (
            <SubscriptionPlanCard
              planFrontend={sectionalMtFrontend}
              planFrontendStatus={sectionalMtFrontendStatus}
              planType={4}
            ></SubscriptionPlanCard>
          )}
          {showType === 8 && (
            <SubscriptionPlanCard
              planFrontend={practiceMtSectionalMtFrontend}
              planFrontendStatus={practiceMtSectionalMtFrontendStatus}
              planType={8}
            ></SubscriptionPlanCard>
          )}
        </Box>
        {/* subscripiont box end */}
      </ThemeProvider>
    </>
  );
}

export default Subscription;
